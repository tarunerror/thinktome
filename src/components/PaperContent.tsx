import React from 'react';
import { Clock, BookOpen, FileText, Download, Share2, Printer, Bookmark } from 'lucide-react';

interface PaperContentProps {
  topic: string;
  selectedSection: string | null;
  paperSections: Record<string, string>;
}

export function PaperContent({ topic, selectedSection, paperSections }: PaperContentProps) {
  const currentDate = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  const handlePrint = () => {
    window.print();
  };

  const handleDownload = () => {
    const content = Object.values(paperSections).join('\n\n');
    const blob = new Blob([content], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${topic.toLowerCase().replace(/\s+/g, '-')}-research-paper.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  const handleShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: topic,
          text: 'Check out this research paper generated by ThinkTome!',
          url: window.location.href,
        });
      } catch (error) {
        console.error('Error sharing:', error);
      }
    }
  };

  return (
    <div className="md:col-span-3 p-3 sm:p-4 md:p-6 lg:p-8 bg-gray-900 border-t md:border-t-0 md:border-l border-gray-700">
      <div className="max-w-4xl mx-auto">
        {/* Paper Actions */}
        <div className="flex flex-wrap gap-2 mb-6">
          <button
            onClick={handleDownload}
            className="inline-flex items-center px-3 py-1.5 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white rounded-lg transition-colors text-sm"
          >
            <Download className="h-4 w-4 mr-2" />
            Download
          </button>
          <button
            onClick={handlePrint}
            className="inline-flex items-center px-3 py-1.5 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white rounded-lg transition-colors text-sm"
          >
            <Printer className="h-4 w-4 mr-2" />
            Print
          </button>
          <button
            onClick={handleShare}
            className="inline-flex items-center px-3 py-1.5 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white rounded-lg transition-colors text-sm"
          >
            <Share2 className="h-4 w-4 mr-2" />
            Share
          </button>
          <button className="inline-flex items-center px-3 py-1.5 bg-gray-800 hover:bg-gray-700 text-gray-300 hover:text-white rounded-lg transition-colors text-sm">
            <Bookmark className="h-4 w-4 mr-2" />
            Save
          </button>
        </div>

        {/* Paper Header */}
        <div className="mb-8 pb-8 border-b border-gray-700">
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center text-sm text-gray-400">
              <Clock className="h-4 w-4 mr-2" />
              <span>{currentDate}</span>
            </div>
            <div className="flex items-center text-sm text-gray-400">
              <BookOpen className="h-4 w-4 mr-2" />
              <span>Academic Research Paper</span>
            </div>
          </div>
          <h1 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-400 via-purple-400 to-blue-400 font-serif mb-4 leading-tight">
            {topic}
          </h1>
          <div className="flex items-center text-sm text-gray-400">
            <FileText className="h-4 w-4 mr-2" />
            <span>Generated by ThinkTome AI</span>
          </div>
        </div>

        {/* Paper Content */}
        <div className="prose prose-invert max-w-none">
          <div className="text-gray-300 leading-relaxed space-y-4 sm:space-y-6">
            {selectedSection && paperSections[selectedSection]?.split('\n').map((paragraph, index) => {
              // Section Headers
              if (paragraph.startsWith('#')) {
                const level = paragraph.match(/^#+/)?.[0].length || 1;
                const title = paragraph.replace(/^#+\s*/, '');
                const Tag = `h${level}` as keyof JSX.IntrinsicElements;
                return (
                  <Tag 
                    key={index}
                    className={`
                      ${level === 1 ? 'text-2xl sm:text-3xl md:text-4xl' : ''}
                      ${level === 2 ? 'text-xl sm:text-2xl md:text-3xl' : ''}
                      ${level === 3 ? 'text-lg sm:text-xl md:text-2xl' : ''}
                      font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-400 to-purple-400
                      mt-8 sm:mt-10 md:mt-12 mb-4 sm:mb-6 font-serif
                    `}
                  >
                    {title}
                  </Tag>
                );
              }
              
              // Lists
              if (paragraph.startsWith('*') || paragraph.startsWith('-')) {
                return (
                  <ul key={index} className="list-disc list-inside space-y-2 pl-4 text-gray-300">
                    <li className="pl-2">{paragraph.replace(/^[*-]\s*/, '')}</li>
                  </ul>
                );
              }
              
              if (paragraph.startsWith('1.') || paragraph.startsWith('2.')) {
                return (
                  <ol key={index} className="list-decimal list-inside space-y-2 pl-4 text-gray-300">
                    <li className="pl-2">{paragraph.replace(/^\d+\.\s*/, '')}</li>
                  </ol>
                );
              }

              // Images with enhanced styling
              if (paragraph.includes('<img')) {
                return (
                  <div key={index} className="my-8 sm:my-10 group">
                    <div 
                      dangerouslySetInnerHTML={{ __html: paragraph }} 
                      className="rounded-xl overflow-hidden shadow-xl bg-gray-800/50 p-4 border border-gray-700 transition-transform duration-300 group-hover:scale-[1.02]"
                    />
                  </div>
                );
              }

              // Regular paragraphs with enhanced readability
              return paragraph.trim() ? (
                <p key={index} className="text-gray-300 text-base sm:text-lg leading-relaxed">
                  {paragraph}
                </p>
              ) : null;
            })}
          </div>
        </div>

        {/* Paper Footer */}
        <div className="mt-12 pt-8 border-t border-gray-700">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center text-sm text-gray-400">
            <div className="flex items-center mb-4 sm:mb-0">
              <FileText className="h-4 w-4 mr-2" />
              <span>Generated using advanced AI and academic sources</span>
            </div>
            <div className="flex items-center">
              <Clock className="h-4 w-4 mr-2" />
              <span>Last updated: {currentDate}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}